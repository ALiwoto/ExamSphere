// Package swaggerHandlers Code generated by swaggo/swag. DO NOT EDIT
package swaggerHandlers

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/captcha/generate": {
            "get": {
                "description": "Allows a client (with Client-R-ID) to generate a captcha",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get a captcha",
                "operationId": "GenerateCaptchaV1",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client-R-ID",
                        "name": "Client-R-ID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apiHandlers.EndpointResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/captchaHandlers.GetCaptchaResult"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/create": {
            "post": {
                "description": "Allows a user to create a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create a new user",
                "operationId": "createUserV1",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Create user data",
                        "name": "createUserData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userHandlers.CreateUserData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apiHandlers.EndpointResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/userHandlers.CreateUserResult"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/login": {
            "post": {
                "description": "Allows a user to login to the system and obtain access/refresh tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Login to the system",
                "operationId": "loginV1",
                "parameters": [
                    {
                        "description": "Login data",
                        "name": "loginData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/userHandlers.LoginData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apiHandlers.EndpointResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/userHandlers.LoginResult"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/me": {
            "get": {
                "description": "Allows a user to get their own information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get the user's information",
                "operationId": "getMeV1",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apiHandlers.EndpointResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/userHandlers.MeResult"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/reAuth": {
            "post": {
                "description": "Allows a user to refresh their access token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Refresh the access token",
                "operationId": "reAuthV1",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Refresh token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apiHandlers.EndpointResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/userHandlers.AuthResult"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apiHandlers.EndpointError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "date": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "origin": {
                    "type": "string"
                }
            }
        },
        "apiHandlers.EndpointResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/apiHandlers.EndpointError"
                },
                "result": {},
                "success": {
                    "type": "boolean"
                }
            }
        },
        "captchaHandlers.GetCaptchaResult": {
            "type": "object",
            "properties": {
                "captcha": {
                    "type": "string"
                },
                "captcha_id": {
                    "type": "string"
                },
                "client_r_id": {
                    "type": "string"
                }
            }
        },
        "userHandlers.AuthResult": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "expiration": {
                    "type": "integer"
                },
                "full_name": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "userHandlers.CreateUserData": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "userHandlers.CreateUserResult": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "userHandlers.LoginData": {
            "type": "object",
            "properties": {
                "captcha_answer": {
                    "type": "string"
                },
                "captcha_id": {
                    "type": "string"
                },
                "client_rid": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "userHandlers.LoginResult": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "expiration": {
                    "type": "integer"
                },
                "full_name": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "userHandlers.MeResult": {
            "type": "object",
            "properties": {
                "full_name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "ExamSphere API",
	Description:      "This is the API for the ExamSphere system",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
