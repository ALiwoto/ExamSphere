definitions:
  APIErrorCode:
    enum:
    - 2100
    - 2101
    - 2102
    - 2103
    - 2104
    - 2105
    - 2106
    - 2107
    - 2108
    - 2109
    - 2110
    - 2111
    - 2112
    - 2113
    - 2114
    - 2115
    - 2116
    - 2117
    - 2118
    - 2119
    - 2120
    - 2121
    - 2122
    - 2123
    - 2124
    - 2125
    - 2126
    - 2127
    - 2128
    - 2129
    - 2130
    - 2131
    - 2132
    - 2133
    - 2134
    - 2135
    - 2136
    - 2137
    - 2138
    type: integer
    x-enum-varnames:
    - ErrCodeMalformedJWT
    - ErrCodeInvalidJWT
    - ErrCodeInvalidBodyData
    - ErrCodeInvalidUsernamePass
    - ErrCodeInvalidAuth
    - ErrCodePermissionDenied
    - ErrCodeInvalidInputPass
    - ErrCodeUsernameExists
    - ErrCodeInternalServerError
    - ErrCodeInvalidFileData
    - ErrCodeInvalidPhoneNumber
    - ErrCodePhoneNumberAlreadyImported
    - ErrCodeInvalidUsername
    - ErrCodeNoPhonesDonated
    - ErrCodeAgentNotConnected
    - ErrCodeInvalidPagination
    - ErrCodeMaxContactImportLimit
    - ErrCodePhoneNumberNotFound
    - ErrCodeParameterRequired
    - ErrCodeUserBanned
    - ErrCodeLabelInfoNotFound
    - ErrCodeLabelAlreadyApplied
    - ErrCodeLabelAlreadyExistsByName
    - ErrCodeTooManyChatLabelInfo
    - ErrCodeLabelNameTooLong
    - ErrCodeLabelDescriptionTooLong
    - ErrCodeInvalidColor
    - ErrCodeLabelNotApplied
    - ErrCodeCannotDeleteBuiltInLabel
    - ErrCodeDuplicatePhoneNumber
    - ErrCodePhoneNotWorking
    - ErrCodeInvalidPmsPass
    - ErrCodeInvalidAgentId
    - ErrCodeInvalidAppSettingName
    - ErrCodeAppSettingNotFound
    - ErrCodeTextEmpty
    - ErrCodeTextTooLong
    - ErrCodeInvalidClientRId
    - ErrCodeInvalidCaptcha
  AuthResult:
    properties:
      access_token:
        type: string
      expiration:
        type: integer
      full_name:
        type: string
      refresh_token:
        type: string
      role:
        type: string
      user_id:
        type: string
    type: object
  CreateUserData:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
      role:
        $ref: '#/definitions/UserRole'
      user_id:
        type: string
    type: object
  CreateUserResult:
    properties:
      email:
        type: string
      full_name:
        type: string
      role:
        type: string
      user_id:
        type: string
    type: object
  EndpointError:
    properties:
      code:
        $ref: '#/definitions/APIErrorCode'
      date:
        type: string
      message:
        type: string
      origin:
        type: string
    type: object
  EndpointResponse:
    properties:
      error:
        $ref: '#/definitions/EndpointError'
      result: {}
      success:
        type: boolean
    type: object
  GetMeResult:
    properties:
      full_name:
        type: string
      role:
        $ref: '#/definitions/UserRole'
      user_id:
        type: string
    type: object
  LoginData:
    properties:
      captcha_answer:
        type: string
      captcha_id:
        type: string
      client_rid:
        type: string
      password:
        type: string
      user_id:
        type: string
    type: object
  LoginResult:
    properties:
      access_token:
        type: string
      expiration:
        type: integer
      full_name:
        type: string
      refresh_token:
        type: string
      role:
        $ref: '#/definitions/UserRole'
      user_id:
        type: string
    type: object
  UserRole:
    description: UserRole is the role of the user.
    enum:
    - owner
    - admin
    - student
    - teacher
    - ""
    type: string
    x-enum-varnames:
    - UserRoleOwner
    - UserRoleAdmin
    - UserRoleStudent
    - UserRoleTeacher
    - UserRoleUnknown
  captchaHandlers.GetCaptchaResult:
    properties:
      captcha:
        type: string
      captcha_id:
        type: string
      client_r_id:
        type: string
    type: object
info:
  contact: {}
  description: This is the API for the ExamSphere system
  title: ExamSphere API
  version: "1.0"
paths:
  /api/v1/captcha/generate:
    get:
      description: Allows a client (with Client-R-ID) to generate a captcha
      operationId: GenerateCaptchaV1
      parameters:
      - description: Client-R-ID
        in: header
        name: Client-R-ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/EndpointResponse'
            - properties:
                result:
                  $ref: '#/definitions/captchaHandlers.GetCaptchaResult'
              type: object
      summary: Get a captcha
      tags:
      - User
  /api/v1/user/create:
    post:
      consumes:
      - application/json
      description: Allows a user to create a new user
      operationId: createUserV1
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create user data
        in: body
        name: createUserData
        required: true
        schema:
          $ref: '#/definitions/CreateUserData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/EndpointResponse'
            - properties:
                result:
                  $ref: '#/definitions/CreateUserResult'
              type: object
      summary: Create a new user
      tags:
      - User
  /api/v1/user/login:
    post:
      consumes:
      - application/json
      description: Allows a user to login to the system and obtain access/refresh
        tokens
      operationId: loginV1
      parameters:
      - description: Login data
        in: body
        name: loginData
        required: true
        schema:
          $ref: '#/definitions/LoginData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/EndpointResponse'
            - properties:
                result:
                  $ref: '#/definitions/LoginResult'
              type: object
      summary: Login to the system
      tags:
      - User
  /api/v1/user/me:
    get:
      description: Allows a user to get their own information
      operationId: getMeV1
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/EndpointResponse'
            - properties:
                result:
                  $ref: '#/definitions/GetMeResult'
              type: object
      summary: Get the user's information
      tags:
      - User
  /api/v1/user/reAuth:
    post:
      description: Allows a user to refresh their access token
      operationId: reAuthV1
      parameters:
      - description: Refresh token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/EndpointResponse'
            - properties:
                result:
                  $ref: '#/definitions/AuthResult'
              type: object
      summary: Refresh the access token
      tags:
      - User
swagger: "2.0"
