definitions:
  apiHandlers.EndpointError:
    properties:
      code:
        type: integer
      date:
        type: string
      message:
        type: string
      origin:
        type: string
    type: object
  apiHandlers.EndpointResponse:
    properties:
      error:
        $ref: '#/definitions/apiHandlers.EndpointError'
      result: {}
      success:
        type: boolean
    type: object
  captchaHandlers.GetCaptchaResult:
    properties:
      captcha:
        type: string
      captcha_id:
        type: string
      client_r_id:
        type: string
    type: object
  userHandlers.AuthResult:
    properties:
      access_token:
        type: string
      expiration:
        type: integer
      full_name:
        type: string
      refresh_token:
        type: string
      role:
        type: string
      user_id:
        type: string
    type: object
  userHandlers.CreateUserData:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
      role:
        type: string
      user_id:
        type: string
    type: object
  userHandlers.CreateUserResult:
    properties:
      email:
        type: string
      full_name:
        type: string
      role:
        type: string
      user_id:
        type: string
    type: object
  userHandlers.LoginData:
    properties:
      captcha_answer:
        type: string
      captcha_id:
        type: string
      client_rid:
        type: string
      password:
        type: string
      user_id:
        type: string
    type: object
  userHandlers.LoginResult:
    properties:
      access_token:
        type: string
      expiration:
        type: integer
      full_name:
        type: string
      refresh_token:
        type: string
      role:
        type: string
      user_id:
        type: string
    type: object
  userHandlers.MeResult:
    properties:
      full_name:
        type: string
      role:
        type: string
      user_id:
        type: string
    type: object
info:
  contact: {}
  description: This is the API for the ExamSphere system
  title: ExamSphere API
  version: "1.0"
paths:
  /api/v1/captcha/generate:
    get:
      description: Allows a client (with Client-R-ID) to generate a captcha
      operationId: GenerateCaptchaV1
      parameters:
      - description: Client-R-ID
        in: header
        name: Client-R-ID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/apiHandlers.EndpointResponse'
            - properties:
                result:
                  $ref: '#/definitions/captchaHandlers.GetCaptchaResult'
              type: object
      summary: Get a captcha
      tags:
      - User
  /api/v1/user/create:
    post:
      consumes:
      - application/json
      description: Allows a user to create a new user
      operationId: createUserV1
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Create user data
        in: body
        name: createUserData
        required: true
        schema:
          $ref: '#/definitions/userHandlers.CreateUserData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/apiHandlers.EndpointResponse'
            - properties:
                result:
                  $ref: '#/definitions/userHandlers.CreateUserResult'
              type: object
      summary: Create a new user
      tags:
      - User
  /api/v1/user/login:
    post:
      consumes:
      - application/json
      description: Allows a user to login to the system and obtain access/refresh
        tokens
      operationId: loginV1
      parameters:
      - description: Login data
        in: body
        name: loginData
        required: true
        schema:
          $ref: '#/definitions/userHandlers.LoginData'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/apiHandlers.EndpointResponse'
            - properties:
                result:
                  $ref: '#/definitions/userHandlers.LoginResult'
              type: object
      summary: Login to the system
      tags:
      - User
  /api/v1/user/me:
    get:
      description: Allows a user to get their own information
      operationId: getMeV1
      parameters:
      - description: Authorization token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/apiHandlers.EndpointResponse'
            - properties:
                result:
                  $ref: '#/definitions/userHandlers.MeResult'
              type: object
      summary: Get the user's information
      tags:
      - User
  /api/v1/user/reAuth:
    post:
      description: Allows a user to refresh their access token
      operationId: reAuthV1
      parameters:
      - description: Refresh token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/apiHandlers.EndpointResponse'
            - properties:
                result:
                  $ref: '#/definitions/userHandlers.AuthResult'
              type: object
      summary: Refresh the access token
      tags:
      - User
swagger: "2.0"
