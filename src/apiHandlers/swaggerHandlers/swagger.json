{
    "swagger": "2.0",
    "info": {
        "description": "This is the API for the ExamSphere system",
        "title": "ExamSphere API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/api/v1/captcha/generate": {
            "get": {
                "description": "Allows a client (with Client-R-ID) to generate a captcha",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get a captcha",
                "operationId": "GenerateCaptchaV1",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client-R-ID",
                        "name": "Client-R-ID",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/EndpointResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/captchaHandlers.GetCaptchaResult"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/create": {
            "post": {
                "description": "Allows a user to create a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create a new user",
                "operationId": "createUserV1",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Create user data",
                        "name": "createUserData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateUserData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/EndpointResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/CreateUserResult"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/edit": {
            "post": {
                "description": "Allows a user to edit another user. Users are not allowed to edit their own information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Edit a user's basic information",
                "operationId": "editUserV1",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Edit user data",
                        "name": "editUserData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EditUserData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/EndpointResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/EditUserResult"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/login": {
            "post": {
                "description": "Allows a user to login to the system and obtain access/refresh tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Login to the system",
                "operationId": "loginV1",
                "parameters": [
                    {
                        "description": "Login data",
                        "name": "loginData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoginData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/EndpointResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/LoginResult"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/me": {
            "get": {
                "description": "Allows a user to get their own information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get the user's information",
                "operationId": "getMeV1",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/EndpointResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/GetMeResult"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/reAuth": {
            "post": {
                "description": "Allows a user to refresh their access token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Refresh the access token",
                "operationId": "reAuthV1",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Refresh token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/EndpointResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/AuthResult"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/user/search": {
            "post": {
                "description": "Allows a user to search for users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Search users",
                "operationId": "searchUserV1",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Search user data",
                        "name": "searchUserData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SearchUserData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/EndpointResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/definitions/SearchUserResult"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "APIErrorCode": {
            "type": "integer",
            "enum": [
                2100,
                2101,
                2102,
                2103,
                2104,
                2105,
                2106,
                2107,
                2108,
                2109,
                2110,
                2111,
                2112,
                2113,
                2114,
                2115,
                2116,
                2117,
                2118,
                2119,
                2120,
                2121,
                2122,
                2123,
                2124,
                2125,
                2126,
                2127,
                2128,
                2129,
                2130,
                2131,
                2132,
                2133,
                2134,
                2135,
                2136,
                2137,
                2138
            ],
            "x-enum-varnames": [
                "ErrCodeMalformedJWT",
                "ErrCodeInvalidJWT",
                "ErrCodeInvalidBodyData",
                "ErrCodeInvalidUsernamePass",
                "ErrCodeInvalidAuth",
                "ErrCodePermissionDenied",
                "ErrCodeInvalidInputPass",
                "ErrCodeUsernameExists",
                "ErrCodeInternalServerError",
                "ErrCodeInvalidFileData",
                "ErrCodeInvalidPhoneNumber",
                "ErrCodePhoneNumberAlreadyImported",
                "ErrCodeInvalidUsername",
                "ErrCodeNoPhonesDonated",
                "ErrCodeAgentNotConnected",
                "ErrCodeInvalidPagination",
                "ErrCodeMaxContactImportLimit",
                "ErrCodePhoneNumberNotFound",
                "ErrCodeParameterRequired",
                "ErrCodeUserBanned",
                "ErrCodeLabelInfoNotFound",
                "ErrCodeLabelAlreadyApplied",
                "ErrCodeLabelAlreadyExistsByName",
                "ErrCodeTooManyChatLabelInfo",
                "ErrCodeLabelNameTooLong",
                "ErrCodeLabelDescriptionTooLong",
                "ErrCodeInvalidColor",
                "ErrCodeLabelNotApplied",
                "ErrCodeCannotDeleteBuiltInLabel",
                "ErrCodeDuplicatePhoneNumber",
                "ErrCodePhoneNotWorking",
                "ErrCodeInvalidPmsPass",
                "ErrCodeInvalidAgentId",
                "ErrCodeInvalidAppSettingName",
                "ErrCodeAppSettingNotFound",
                "ErrCodeTextEmpty",
                "ErrCodeTextTooLong",
                "ErrCodeInvalidClientRId",
                "ErrCodeInvalidCaptcha"
            ]
        },
        "AuthResult": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "expiration": {
                    "type": "integer"
                },
                "full_name": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "CreateUserData": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/UserRole"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "CreateUserResult": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "EditUserData": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "EditUserResult": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/UserRole"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "EndpointError": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/APIErrorCode"
                },
                "date": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "origin": {
                    "type": "string"
                }
            }
        },
        "EndpointResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/EndpointError"
                },
                "result": {},
                "success": {
                    "type": "boolean"
                }
            }
        },
        "GetMeResult": {
            "type": "object",
            "properties": {
                "full_name": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/UserRole"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "LoginData": {
            "type": "object",
            "properties": {
                "captcha_answer": {
                    "type": "string"
                },
                "captcha_id": {
                    "type": "string"
                },
                "client_rid": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "LoginResult": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "expiration": {
                    "type": "integer"
                },
                "full_name": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/UserRole"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "SearchUserData": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer",
                    "minimum": 1
                },
                "offset": {
                    "type": "integer"
                },
                "query": {
                    "type": "string"
                }
            }
        },
        "SearchUserResult": {
            "type": "object",
            "properties": {
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SearchedUserInfo"
                    }
                }
            }
        },
        "SearchedUserInfo": {
            "type": "object",
            "properties": {
                "ban_reason": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "is_banned": {
                    "type": "boolean"
                },
                "role": {
                    "$ref": "#/definitions/UserRole"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "UserRole": {
            "description": "UserRole is the role of the user.",
            "type": "string",
            "enum": [
                "owner",
                "admin",
                "student",
                "teacher",
                ""
            ],
            "x-enum-varnames": [
                "UserRoleOwner",
                "UserRoleAdmin",
                "UserRoleStudent",
                "UserRoleTeacher",
                "UserRoleUnknown"
            ]
        },
        "captchaHandlers.GetCaptchaResult": {
            "type": "object",
            "properties": {
                "captcha": {
                    "type": "string"
                },
                "captcha_id": {
                    "type": "string"
                },
                "client_r_id": {
                    "type": "string"
                }
            }
        }
    }
}